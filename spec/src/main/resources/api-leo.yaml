openapi: 3.0.0

info:
  version: "0.0.1-SNAPSHOT"
  title: Api-Leo

tags:
  - name: "Employees"
    description: "Provides enpoints to view and manage Employees"
  - name: "Departments"
    description: "Provides enpoints to view and manage Departments"

servers:
  - url: "http://127.0.0.1:8080/"
    description: "Local host environment"

paths:
  /colaborador/paginacaoa:
    get:
      operationId: "listarColaboradores"
      tags:
        - "Employees"
      description: "Find employees with type A of pagination."
      parameters:
        - in: "query"
          name: "page"
          description: "Page number you want to see when the data is fetched."
          required: true
          schema:
            type: integer
        - in: "query"
          name: "qtd"
          description: "Quantity of results per page."
          required: true
          schema:
            type: integer
        - in: "query"
          name: "ordination"
          description: "How to order the results: asc or desc"
          required: false
          schema:
            type: string
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
        400:
          description: "Something went wrong with your request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: "The user doesn't have permissions to read"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: string
          format: uuid
        cpf:
          type: string
          description: "Common brazilian identity."
          example: "123.456.789-01"
          uniqueItems: true
          maxLength: 14
          pattern: '\d{3}\.\d{3}\.\d{3}-\d{2}'
        name:
          type: string
          description: "Employee's name."
          example: "Kanavilil Hajagopalan"
          maxLength: 255
        telephone:
          type: string
          description: "Telephone number."
          example: "+55 (11) 1234-4567"
          pattern: '\+\d{2} \(\d{2}\) \d{4}-\d{4}'
        email:
          type: string
          description: "Common email address."
          example: "tarasankar@jmail.com"
          uniqueItems: true
          format: email
        birthDate:
          type: string
          description: "Birth date."
          format: date
          example: "01/02/1560"
          pattern: '\d{2}\/\d{2}\/\d{4}'
        registrationDate:
          type: string
          format: date-time
          description: "Registration date, autogenerated by the system."
        department:
          type: object
          description: "Department where the employee usually works."
      required:
        - cpf
        - name
        - telephone
        - email
        - birthDate

    Department:
      type: object
      properties:
        id:
          type: number
        description:
          type: string
      required:
        - description

    ErrorResponse:
      type: object
      properties:
        message:
          type: string

    DtoFormError:
      type: object
      properties:
        field:
          type: string
        error:
          type: string
#TODO finalize
